diff --git a/layout/generic/nsIFrame.cpp b/layout/generic/nsIFrame.cpp
index e13628eccc51f0e81fc1404b061840d816502757..87b094648e1cd3d94095cade6a4265145f31b85b 100644
--- a/layout/generic/nsIFrame.cpp
+++ b/layout/generic/nsIFrame.cpp
@@ -6,6 +6,9 @@
 
 /* base class of all rendering objects */
 
+#include "mozilla/Glide.h"
+#include "mozilla/StaticPrefs_glide.h"
+
 #include "nsIFrame.h"
 
 #include <stdarg.h>
@@ -2642,7 +2645,19 @@ void nsIFrame::DisplayCaret(nsDisplayListBuilder* aBuilder,
 }
 
 nscolor nsIFrame::GetCaretColorAt(int32_t aOffset) {
-  return nsLayoutUtils::GetTextColor(this, &nsStyleUI::mCaretColor);
+  auto baseColor = nsLayoutUtils::GetTextColor(this, &nsStyleUI::mCaretColor);
+
+  // If in block caret mode, override the caret colour so that
+  // the underlying character can be visible by always using using
+  // an alpha.
+  StripAtomic<RelaxedAtomicInt32> glideCaretStyle = StaticPrefs::glide_caret_style();
+  if (StaticPrefs::glide_vimcaret() && glide::shouldRenderBlockCaret(glideCaretStyle)) {
+    auto color = sRGBColor::FromABGR(baseColor);
+    color.a = 0.5;
+    return color.ToABGR();
+  }
+
+  return baseColor;
 }
 
 auto nsIFrame::ComputeShouldPaintBackground() const -> ShouldPaintBackground {
