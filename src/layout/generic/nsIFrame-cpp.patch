diff --git a/layout/generic/nsIFrame.cpp b/layout/generic/nsIFrame.cpp
index 0fff882bd3b643e3ab59cfaada984bef0ae7fee4..3fba682fcd5e84d3345413fd00b62960d85546b9 100644
--- a/layout/generic/nsIFrame.cpp
+++ b/layout/generic/nsIFrame.cpp
@@ -11,6 +11,7 @@
 #include <stdarg.h>
 #include <algorithm>
 
+#include "mozilla/Glide.h"
 #include "gfx2DGlue.h"
 #include "gfxUtils.h"
 #include "mozilla/Attributes.h"
@@ -21,6 +22,7 @@
 #include "mozilla/EventForwards.h"
 #include "mozilla/FocusModel.h"
 #include "mozilla/StaticPrefs_dom.h"
+#include "mozilla/StaticPrefs_glide.h"
 #include "mozilla/dom/CSSAnimation.h"
 #include "mozilla/dom/CSSTransition.h"
 #include "mozilla/dom/ContentVisibilityAutoStateChangeEvent.h"
@@ -2631,7 +2633,19 @@ void nsIFrame::DisplayCaret(nsDisplayListBuilder* aBuilder,
 }
 
 nscolor nsIFrame::GetCaretColorAt(int32_t aOffset) {
-  return nsLayoutUtils::GetTextColor(this, &nsStyleUI::mCaretColor);
+  auto baseColor = nsLayoutUtils::GetTextColor(this, &nsStyleUI::mCaretColor);
+
+  // If in block caret mode, override the caret colour so that
+  // the underlying character can be visible by always using using
+  // an alpha.
+  StripAtomic<RelaxedAtomicInt32> glideMode = StaticPrefs::glide_mode();
+  if (StaticPrefs::glide_vimcaret() && glide::shouldRenderBlockCaret(glideMode)) {
+    auto color = sRGBColor::FromABGR(baseColor);
+    color.a = 0.5;
+    return color.ToABGR();
+  }
+
+  return baseColor;
 }
 
 auto nsIFrame::ComputeShouldPaintBackground() const -> ShouldPaintBackground {
